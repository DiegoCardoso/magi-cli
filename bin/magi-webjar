#!/usr/bin/env node
'use strict';

const program = require('commander');
program
  .parse(process.argv);

const {workingPackage, elementName, createAPI} = require('../lib/tools.js');

async function main() {
  const api = createAPI({
    baseURL: 'https://www.webjars.org',
    headers: {'Accept': 'text/plain'},
    responseType: 'stream'
  });

  if (program.args.length < 1) {
    throw 'not enough arguments, expected <version>';
  }

  const query = require('querystring').stringify({
    webJarType: 'BowerGitHub',
    nameOrUrlish: `https://github.com/${workingPackage.repository}`,
    version: program.args[0]
  });

  const response = await api.post(`/deploy?${query}`);

  response.data.pipe(process.stdout);

  return new Promise((resolve) => response.data.on('end', resolve));
}

main(...program.args)
  .then(() => {
    const [tag] = program.args;
    const version = tag.replace(/^v/, '');
    console.log(`Check deployed URL: https://dl.bintray.com/webjars/maven/org/webjars/bowergithub/vaadin/${elementName}/${version}`);
    process.exit(0);
  })
  .catch((e) => {
    console.error(e);
    process.exit(1);
  });
