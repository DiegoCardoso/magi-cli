#!/usr/bin/env node
'use strict';

const {run, workingPackage} = require('../lib/tools.js');

const program = require('commander');
program
  .arguments('<fromVersion> <toVersion>')
  .parse(process.argv);

if (program.args.length < 2) {
  console.error('not enough arguments, expected <fromVersion> <toVersion>');
  process.exit(1);
}

async function main(fromVersion, toVersion) {
  const toVersionNumber = toVersion.replace(/^v/, '');

  function reformatChangeLog(changeLog) {
    return '- ' + changeLog
        .split(/^- /gm)
        // first item is always empty
        .filter((i, index) => index !== 0)
        // strip trailing whitespace from commit description body
        .map(item => item.replace(/\s+$/, ''))
        // If top commit subject matches toVersionNumber - skip it
        .filter((item, index) => index !== 0 || !RegExp(`^\\S+ ${toVersionNumber}\\b`).exec(item))
        .join('\n\n- ')
  }

  const changeLog = await run(`git log --no-merges --pretty=format:"- %h %w(0,0,2)%B" ${fromVersion}..${toVersion}`);

  console.log(`\
[Live Demo →](https://cdn.vaadin.com/${workingPackage.name}/${toVersionNumber}/demo/)
[API Documentation →](https://cdn.vaadin.com/${workingPackage.name}/${toVersionNumber}/#/elements/${workingPackage.name})

### Changes Since [${fromVersion}](https://github.com/vaadin/${workingPackage.name}/releases/tag/${fromVersion}):

${reformatChangeLog(changeLog)}
`);
}

main(...program.args)
  .then(() => process.exit(0))
  .catch((e) => {
    console.error(e);
    process.exit(1);
  });
